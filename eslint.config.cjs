/* eslint-disable @typescript-eslint/no-require-imports */
const {
    defineConfig,
} = require('eslint/config')

const tsParser = require('@typescript-eslint/parser')
const typescriptEslint = require('@typescript-eslint/eslint-plugin')
const globals = require('globals')
const js = require('@eslint/js')

const {
    FlatCompat,
} = require('@eslint/eslintrc')

const compat = new FlatCompat({
    baseDirectory: __dirname,
    recommendedConfig: js.configs.recommended,
    allConfig: js.configs.all,
})

module.exports = defineConfig([ {
    extends: compat.extends('eslint:recommended', 'plugin:@typescript-eslint/recommended'),

    languageOptions: {
        parser: tsParser,
        ecmaVersion: 'latest',
        sourceType: 'module',
        parserOptions: {},

        globals: {
            ...globals.browser,
            ...globals.node,
            ...globals.jquery,
            ...globals.prototypejs,
            'define': false,
            'require': true,
            'module': true,
        },
    },

    plugins: {
        '@typescript-eslint': typescriptEslint,
    },

    rules: {
        'no-await-in-loop': 1,
        'no-cond-assign': 0,
        'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',
        'no-constant-condition': 1,
        'no-control-regex': 0,
        'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
        'no-dupe-keys': 2,
        'no-empty': 1,
        'no-empty-character-class': 1,
        'no-ex-assign': 1,
        'no-extra-boolean-cast': 2,
        'no-extra-parens': 2,
        'no-extra-semi': 2,
        'no-func-assign': 2,
        'no-inner-declarations': 0,
        'no-invalid-regexp': 0,
        'no-invalid-this': 2,
        'no-irregular-whitespace': 2,
        'no-negated-in-lhs': 0,
        'no-obj-calls': 0,
        'no-regex-spaces': 0,
        'no-reserved-keys': 0,
        'no-sparse-arrays': 0,
        'no-unreachable': 2,
        'use-isnan': 0,
        'valid-jsdoc': 0,
        'valid-typeof': 2,
        'block-scoped-var': 2,
        'complexity': 0,
        'consistent-return': 0,
        'curly': [ 2, 'multi-or-nest', 'consistent' ],
        'default-case': 2,
        'dot-notation': 2,
        'eqeqeq': 0,
        'guard-for-in': 0,
        'no-alert': 2,
        'no-caller': 0,
        'no-div-regex': 0,
        'no-else-return': 2,
        'no-empty-label': 0,
        'no-eq-null': 0,
        'no-eval': 1,
        'no-extend-native': 2,
        'no-extra-bind': 0,
        'no-fallthrough': 2,
        'no-floating-decimal': 0,
        'no-implied-eval': 0,
        'no-implicit-globals': 2,
        'no-iterator': 2,
        'no-labels': 0,
        'no-lone-blocks': 0,
        'no-loop-func': 0,
        'no-multi-spaces': 2,
        'no-multi-str': 0,
        'no-native-reassign': 0,
        'no-new': 0,
        'no-new-func': 2,
        'no-new-wrappers': 2,
        'no-octal': 0,
        'no-octal-escape': 0,
        'no-process-env': 0,
        'no-proto': 2,
        'no-redeclare': 2,
        'no-return-assign': 0,
        'no-script-url': 0,
        'no-self-compare': 0,
        'no-sequences': 0,
        'no-unused-expressions': 1,
        'no-useless-constructor': 1,
        'no-void': 0,
        'no-warning-comments': 0,
        'no-with': 0,
        'radix': 0,
        'require-await': 1,
        'vars-on-top': 0,
        'wrap-iife': 0,
        'yoda': 0,
        'no-catch-shadow': 0,
        'no-delete-var': 0,
        'no-label-var': 0,
        'no-shadow': 1,
        'no-shadow-restricted-names': 2,
        'no-undef': 0,
        'no-undef-init': 0,
        'no-undefined': 0,

        'no-unused-vars': [ 2, {
            'varsIgnorePattern': 'breakpoint',
            'argsIgnorePattern': 'useFor',
        } ],

        'no-use-before-define': 2,
        'handle-callback-err': 0,
        'no-mixed-requires': 0,
        'no-new-require': 0,
        'no-path-concat': 0,
        'no-process-exit': 0,
        'no-restricted-modules': 0,
        'no-sync': 0,
        'array-bracket-spacing': [ 1, 'always' ],
        'brace-style': [ 2, '1tbs' ],
        'camelcase': 2,

        'comma-dangle': [ 'error', {
            arrays: 'always-multiline',
            objects: 'always-multiline',
            functions: 'never',
        } ],

        'comma-spacing': [ 2, {
            'before': false,
            'after': true,
        } ],

        'comma-style': 0,
        'consistent-this': 0,
        'eol-last': 2,
        'func-names': 0,
        'func-style': 0,
        'indent': 1,
        'key-spacing': 1,
        'max-nested-callbacks': 0,
        'new-cap': 2,
        'new-parens': 2,
        'no-array-constructor': 0,
        'no-inline-comments': 0,
        'no-lonely-if': 0,
        'no-mixed-spaces-and-tabs': [ 2, 'smart-tabs' ],
        'no-multiple-empty-lines': 2,
        'no-nested-ternary': 0,
        'no-new-object': 0,
        'no-space-before-semi': 0,
        'no-spaced-func': 0,
        'no-ternary': 0,
        'no-trailing-spaces': 2,
        'no-underscore-dangle': 0,
        'no-wrap-func': 0,
        'one-var': 0,
        'object-curly-spacing': [ 1, 'always' ],
        'operator-assignment': 0,
        'padded-blocks': 0,
        'prefer-const': 1,
        'quote-props': 0,

        'quotes': [ 2, 'single', {
            'allowTemplateLiterals': true,
        } ],

        'semi': [ 2, 'never' ],
        'sort-vars': 0,
        'space-after-function-name': 0,

        'keyword-spacing': [ 'error', {
            'before': true,
            after: true,
        } ],

        'space-before-blocks': 0,
        'space-before-function-paren': [ 1, 'never' ],
        'space-in-parens': [ 1, 'never' ],
        'space-infix-ops': 0,
        'space-return-throw-case': 0,
        'space-unary-ops': 0,
        'spaced-line-comment': 0,
        'template-curly-spacing': [ 1, 'always' ],
        'wrap-regex': 0,
        'no-duplicate-imports': 2,
        'no-var': 2,
        'generator-star': 0,
        'max-depth': 0,
        'max-len': 0,
        'max-params': 0,
        'max-statements': 0,
        'no-bitwise': 0,
        'no-plusplus': 0,
    },
} ])
